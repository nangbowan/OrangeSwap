/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import { FunctionFragment, Result } from "@ethersproject/abi";
import { Listener, Provider } from "@ethersproject/providers";
import { TypedEventFilter, TypedEvent, TypedListener, OnEvent } from "./common";

export interface OrgIdoInterface extends utils.Interface {
  functions: {
    "getidoretail()": FunctionFragment;
    "getidowhite()": FunctionFragment;
    "goretailido()": FunctionFragment;
    "gowhiteido()": FunctionFragment;
    "idonum(address)": FunctionFragment;
    "idoretail(uint256)": FunctionFragment;
    "idowhite(uint256)": FunctionFragment;
    "isretailido(address)": FunctionFragment;
    "iswhite(address)": FunctionFragment;
    "iswhiteido(address)": FunctionFragment;
    "maxretailidonum()": FunctionFragment;
    "maxwhiteidonum()": FunctionFragment;
    "orgbundrebate()": FunctionFragment;
    "orgprice()": FunctionFragment;
    "owner()": FunctionFragment;
    "receiveaddress()": FunctionFragment;
    "retailidoendtime()": FunctionFragment;
    "retailidonum()": FunctionFragment;
    "retailidostarttime()": FunctionFragment;
    "setbundrebatecontract(address)": FunctionFragment;
    "setmaxretailidonum(uint256)": FunctionFragment;
    "setmaxwhiteidonum(uint256)": FunctionFragment;
    "setorgprice(uint256)": FunctionFragment;
    "setreceiveaddress(address)": FunctionFragment;
    "setretailidoendtime(uint256)": FunctionFragment;
    "setretailidostarttime(uint256)": FunctionFragment;
    "setwhite(address[],bool)": FunctionFragment;
    "setwhiteidoendtime(uint256)": FunctionFragment;
    "setwhiteidostarttime(uint256)": FunctionFragment;
    "usdt()": FunctionFragment;
    "whiteidoendtime()": FunctionFragment;
    "whiteidonum()": FunctionFragment;
    "whiteidostarttime()": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "getidoretail",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getidowhite",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "goretailido",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "gowhiteido",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "idonum", values: [string]): string;
  encodeFunctionData(
    functionFragment: "idoretail",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "idowhite",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "isretailido", values: [string]): string;
  encodeFunctionData(functionFragment: "iswhite", values: [string]): string;
  encodeFunctionData(functionFragment: "iswhiteido", values: [string]): string;
  encodeFunctionData(
    functionFragment: "maxretailidonum",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "maxwhiteidonum",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "orgbundrebate",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "orgprice", values?: undefined): string;
  encodeFunctionData(functionFragment: "owner", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "receiveaddress",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "retailidoendtime",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "retailidonum",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "retailidostarttime",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "setbundrebatecontract",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "setmaxretailidonum",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setmaxwhiteidonum",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setorgprice",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setreceiveaddress",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "setretailidoendtime",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setretailidostarttime",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setwhite",
    values: [string[], boolean]
  ): string;
  encodeFunctionData(
    functionFragment: "setwhiteidoendtime",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setwhiteidostarttime",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "usdt", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "whiteidoendtime",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "whiteidonum",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "whiteidostarttime",
    values?: undefined
  ): string;

  decodeFunctionResult(
    functionFragment: "getidoretail",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getidowhite",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "goretailido",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "gowhiteido", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "idonum", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "idoretail", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "idowhite", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "isretailido",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "iswhite", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "iswhiteido", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "maxretailidonum",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "maxwhiteidonum",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "orgbundrebate",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "orgprice", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "owner", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "receiveaddress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "retailidoendtime",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "retailidonum",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "retailidostarttime",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setbundrebatecontract",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setmaxretailidonum",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setmaxwhiteidonum",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setorgprice",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setreceiveaddress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setretailidoendtime",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setretailidostarttime",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "setwhite", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "setwhiteidoendtime",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setwhiteidostarttime",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "usdt", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "whiteidoendtime",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "whiteidonum",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "whiteidostarttime",
    data: BytesLike
  ): Result;

  events: {};
}

export interface OrgIdo extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: OrgIdoInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    getidoretail(overrides?: CallOverrides): Promise<[string[]]>;

    getidowhite(overrides?: CallOverrides): Promise<[string[]]>;

    goretailido(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    gowhiteido(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    idonum(arg0: string, overrides?: CallOverrides): Promise<[BigNumber]>;

    idoretail(arg0: BigNumberish, overrides?: CallOverrides): Promise<[string]>;

    idowhite(arg0: BigNumberish, overrides?: CallOverrides): Promise<[string]>;

    isretailido(arg0: string, overrides?: CallOverrides): Promise<[boolean]>;

    iswhite(arg0: string, overrides?: CallOverrides): Promise<[boolean]>;

    iswhiteido(arg0: string, overrides?: CallOverrides): Promise<[boolean]>;

    maxretailidonum(overrides?: CallOverrides): Promise<[BigNumber]>;

    maxwhiteidonum(overrides?: CallOverrides): Promise<[BigNumber]>;

    orgbundrebate(overrides?: CallOverrides): Promise<[string]>;

    orgprice(overrides?: CallOverrides): Promise<[BigNumber]>;

    owner(overrides?: CallOverrides): Promise<[string]>;

    receiveaddress(overrides?: CallOverrides): Promise<[string]>;

    retailidoendtime(overrides?: CallOverrides): Promise<[BigNumber]>;

    retailidonum(overrides?: CallOverrides): Promise<[BigNumber]>;

    retailidostarttime(overrides?: CallOverrides): Promise<[BigNumber]>;

    setbundrebatecontract(
      bundrebatecontract: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setmaxretailidonum(
      _maxretailidonum: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setmaxwhiteidonum(
      _maxwhiteidonum: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setorgprice(
      _orgprice: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setreceiveaddress(
      newaddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setretailidoendtime(
      time: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setretailidostarttime(
      time: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setwhite(
      account: string[],
      flag: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setwhiteidoendtime(
      time: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setwhiteidostarttime(
      time: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    usdt(overrides?: CallOverrides): Promise<[string]>;

    whiteidoendtime(overrides?: CallOverrides): Promise<[BigNumber]>;

    whiteidonum(overrides?: CallOverrides): Promise<[BigNumber]>;

    whiteidostarttime(overrides?: CallOverrides): Promise<[BigNumber]>;
  };

  getidoretail(overrides?: CallOverrides): Promise<string[]>;

  getidowhite(overrides?: CallOverrides): Promise<string[]>;

  goretailido(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  gowhiteido(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  idonum(arg0: string, overrides?: CallOverrides): Promise<BigNumber>;

  idoretail(arg0: BigNumberish, overrides?: CallOverrides): Promise<string>;

  idowhite(arg0: BigNumberish, overrides?: CallOverrides): Promise<string>;

  isretailido(arg0: string, overrides?: CallOverrides): Promise<boolean>;

  iswhite(arg0: string, overrides?: CallOverrides): Promise<boolean>;

  iswhiteido(arg0: string, overrides?: CallOverrides): Promise<boolean>;

  maxretailidonum(overrides?: CallOverrides): Promise<BigNumber>;

  maxwhiteidonum(overrides?: CallOverrides): Promise<BigNumber>;

  orgbundrebate(overrides?: CallOverrides): Promise<string>;

  orgprice(overrides?: CallOverrides): Promise<BigNumber>;

  owner(overrides?: CallOverrides): Promise<string>;

  receiveaddress(overrides?: CallOverrides): Promise<string>;

  retailidoendtime(overrides?: CallOverrides): Promise<BigNumber>;

  retailidonum(overrides?: CallOverrides): Promise<BigNumber>;

  retailidostarttime(overrides?: CallOverrides): Promise<BigNumber>;

  setbundrebatecontract(
    bundrebatecontract: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setmaxretailidonum(
    _maxretailidonum: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setmaxwhiteidonum(
    _maxwhiteidonum: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setorgprice(
    _orgprice: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setreceiveaddress(
    newaddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setretailidoendtime(
    time: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setretailidostarttime(
    time: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setwhite(
    account: string[],
    flag: boolean,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setwhiteidoendtime(
    time: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setwhiteidostarttime(
    time: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  usdt(overrides?: CallOverrides): Promise<string>;

  whiteidoendtime(overrides?: CallOverrides): Promise<BigNumber>;

  whiteidonum(overrides?: CallOverrides): Promise<BigNumber>;

  whiteidostarttime(overrides?: CallOverrides): Promise<BigNumber>;

  callStatic: {
    getidoretail(overrides?: CallOverrides): Promise<string[]>;

    getidowhite(overrides?: CallOverrides): Promise<string[]>;

    goretailido(overrides?: CallOverrides): Promise<void>;

    gowhiteido(overrides?: CallOverrides): Promise<void>;

    idonum(arg0: string, overrides?: CallOverrides): Promise<BigNumber>;

    idoretail(arg0: BigNumberish, overrides?: CallOverrides): Promise<string>;

    idowhite(arg0: BigNumberish, overrides?: CallOverrides): Promise<string>;

    isretailido(arg0: string, overrides?: CallOverrides): Promise<boolean>;

    iswhite(arg0: string, overrides?: CallOverrides): Promise<boolean>;

    iswhiteido(arg0: string, overrides?: CallOverrides): Promise<boolean>;

    maxretailidonum(overrides?: CallOverrides): Promise<BigNumber>;

    maxwhiteidonum(overrides?: CallOverrides): Promise<BigNumber>;

    orgbundrebate(overrides?: CallOverrides): Promise<string>;

    orgprice(overrides?: CallOverrides): Promise<BigNumber>;

    owner(overrides?: CallOverrides): Promise<string>;

    receiveaddress(overrides?: CallOverrides): Promise<string>;

    retailidoendtime(overrides?: CallOverrides): Promise<BigNumber>;

    retailidonum(overrides?: CallOverrides): Promise<BigNumber>;

    retailidostarttime(overrides?: CallOverrides): Promise<BigNumber>;

    setbundrebatecontract(
      bundrebatecontract: string,
      overrides?: CallOverrides
    ): Promise<void>;

    setmaxretailidonum(
      _maxretailidonum: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    setmaxwhiteidonum(
      _maxwhiteidonum: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    setorgprice(
      _orgprice: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    setreceiveaddress(
      newaddress: string,
      overrides?: CallOverrides
    ): Promise<void>;

    setretailidoendtime(
      time: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    setretailidostarttime(
      time: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    setwhite(
      account: string[],
      flag: boolean,
      overrides?: CallOverrides
    ): Promise<void>;

    setwhiteidoendtime(
      time: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    setwhiteidostarttime(
      time: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    usdt(overrides?: CallOverrides): Promise<string>;

    whiteidoendtime(overrides?: CallOverrides): Promise<BigNumber>;

    whiteidonum(overrides?: CallOverrides): Promise<BigNumber>;

    whiteidostarttime(overrides?: CallOverrides): Promise<BigNumber>;
  };

  filters: {};

  estimateGas: {
    getidoretail(overrides?: CallOverrides): Promise<BigNumber>;

    getidowhite(overrides?: CallOverrides): Promise<BigNumber>;

    goretailido(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    gowhiteido(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    idonum(arg0: string, overrides?: CallOverrides): Promise<BigNumber>;

    idoretail(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    idowhite(arg0: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>;

    isretailido(arg0: string, overrides?: CallOverrides): Promise<BigNumber>;

    iswhite(arg0: string, overrides?: CallOverrides): Promise<BigNumber>;

    iswhiteido(arg0: string, overrides?: CallOverrides): Promise<BigNumber>;

    maxretailidonum(overrides?: CallOverrides): Promise<BigNumber>;

    maxwhiteidonum(overrides?: CallOverrides): Promise<BigNumber>;

    orgbundrebate(overrides?: CallOverrides): Promise<BigNumber>;

    orgprice(overrides?: CallOverrides): Promise<BigNumber>;

    owner(overrides?: CallOverrides): Promise<BigNumber>;

    receiveaddress(overrides?: CallOverrides): Promise<BigNumber>;

    retailidoendtime(overrides?: CallOverrides): Promise<BigNumber>;

    retailidonum(overrides?: CallOverrides): Promise<BigNumber>;

    retailidostarttime(overrides?: CallOverrides): Promise<BigNumber>;

    setbundrebatecontract(
      bundrebatecontract: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setmaxretailidonum(
      _maxretailidonum: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setmaxwhiteidonum(
      _maxwhiteidonum: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setorgprice(
      _orgprice: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setreceiveaddress(
      newaddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setretailidoendtime(
      time: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setretailidostarttime(
      time: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setwhite(
      account: string[],
      flag: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setwhiteidoendtime(
      time: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setwhiteidostarttime(
      time: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    usdt(overrides?: CallOverrides): Promise<BigNumber>;

    whiteidoendtime(overrides?: CallOverrides): Promise<BigNumber>;

    whiteidonum(overrides?: CallOverrides): Promise<BigNumber>;

    whiteidostarttime(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    getidoretail(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getidowhite(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    goretailido(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    gowhiteido(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    idonum(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    idoretail(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    idowhite(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    isretailido(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    iswhite(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    iswhiteido(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    maxretailidonum(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    maxwhiteidonum(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    orgbundrebate(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    orgprice(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    owner(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    receiveaddress(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    retailidoendtime(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    retailidonum(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    retailidostarttime(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    setbundrebatecontract(
      bundrebatecontract: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setmaxretailidonum(
      _maxretailidonum: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setmaxwhiteidonum(
      _maxwhiteidonum: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setorgprice(
      _orgprice: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setreceiveaddress(
      newaddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setretailidoendtime(
      time: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setretailidostarttime(
      time: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setwhite(
      account: string[],
      flag: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setwhiteidoendtime(
      time: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setwhiteidostarttime(
      time: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    usdt(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    whiteidoendtime(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    whiteidonum(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    whiteidostarttime(overrides?: CallOverrides): Promise<PopulatedTransaction>;
  };
}
